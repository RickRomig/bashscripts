#!/bin/bash
###############################################################################
# Script Name  : chekk-updates
# Description  : check to see if updates are available
# Dependencies : apt-get, select
# Arguments    : none
# Author       : Richard Romig, 08 December 2018
# Email        : rick.romig@gmail.com
# Comments     : Lists available updates, if any.
#              : For Debian/Ubuntu-based Linux distributions
# Last updated : 18 Apr 2020
###############################################################################
# Copyright (C) 2018  Richard Romig
# Email: rick.romig@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.
###############################################################################

# shellcheck disable=SC2034

set -e

install_updates()
{
  echo -e "\n\e[33mInstalling updates ...\e[0m"
  sudo apt-get full-upgrade -yy
}

clean_cache()
{
  echo -e "\n\e[33mCleaning up apt cache ...\e[0m"
  sudo apt-get autoclean
}

remove_orphans()
{
  echo -e "\n\e[33mRemoving orphaned packages ...\e[0m"
  sudo apt-get autoremove -yy
}

all_done()
{
  echo -en "\n\e[33mUpdate complete. $NUPD "
  [ "$NUPD" -eq 1 ] && echo -n "update was" || echo -n "updates were"
  echo -e " installed.\e[0m"
}

defer_updates()
{
  echo -en "\n\e[1;33mNo updates installed. $NUPD "
  [ "$NUPD" -eq 1 ] && echo -n "update was" || echo -n "updates were"
  echo -e " deferred.\e[0m"
}

format_time()
{
  ET="$1"
  ((h=ET/3600))
  ((m=(ET%3600)/60))
  ((s=ET%60))
  printf "%02d:%02d:%02d\n" $h $m $s
}

readonly SCRIPT=$(basename "$0")
readonly VERSION="v1.3.0"
readonly UPDATED="24 Dec 2020"

SECONDS=0

clear
echo -e "\e[1;33m$SCRIPT $VERSION ($UPDATED)\e[0m"
echo "Licensed under the GNU General Public License, version 2.0"
echo -e "\e[1;33mChecking for updates on $LHOST...\e[0m"
sudo apt-get update

NUPD=$(apt-get upgrade -s 2>/dev/null | grep -P '^\d+ upgraded' | cut -d" " -f1)

if [ "$NUPD" -gt 0 ]; then
  apt list --upgradeable
  echo -e "\n\e[1;33mUpdate options:\e[0m"
  PS3="Choose an option: "
  OPTIONS=("Install updates." "Install updates, remove orphaned packages, & clean cache." \
   "Install updates and remove orphaned packages" "Defer updates until later.")
  select OPT in "${OPTIONS[@]}"
  do
    case $REPLY in
      1 ) install_updates; all_done; break ;;
      2 ) install_updates; remove_orphans; clean_cache; all_done; break ;;
      3 ) install_updates; remove_orphans; all_done; break ;;
      4 ) defer_updates; break ;;
      * ) echo -e "\e[91mInvalid option! Try again.\e[0m" >&2 ;;
    esac
  done
else
  echo -e "\n\e[33mAll packages are up to date.\e[0m"
fi
echo "Script completed in $(format_time $SECONDS)"
exit
