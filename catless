#!/usr/bin/env bash
#############################################################################
# Script Name  : catless
# Description  : view text file with less or cat based on terminal window size.
# Dependencies : none
# Arguments    : $1 -> file to be viewed
# Author       : Copyright (C) 2020, Richard B. Romig, 02 Jan 2020
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.com
# Comments     : 
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
#############################################################################

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib
# shellcheck disable=SC1091

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Variables ##

_script=$(basename "$0"); readonly _script
readonly _version="0.3.1"
readonly _updated="10 Nov 2023"

## Functions ##

help() {
  local errcode="${1:-2}"
  cat << END_HELP
  Usage: $_script [filename] [-h] [--help]

  $_script displays a text file using either cat or less depending the number of
  lines in the file and the number of rows in the current terminal window. Less 
  is used when the number of lines is greater than the 87% of the rows, otherwise
  cat is used.

"$_script v$_version (updated $_updated)"
END_HELP
  exit "$errcode"
}

## Execution ##

# Check arguments
if [[ $# -eq 0 ]]; then
  printf "%s No argument passed.\n" "$red_error" >&2
  help 1
elif [[ "$1" = "-h" || "$1" = "--help" ]]; then
  help 0
elif [[ ! -f "$1" ]]; then
  printf "%s %s not found.\n" "$red_error" "$1" >&2
  help 2
else
  filename="$1"
fi

# Get 87% of screen and size of file
max=$(( $(tput lines)*87/100 ))
size=$(wc -l "$filename" | cut -d' ' -f1)

# View the file
box "File: $filename" "*"
if (( size < max )); then
	cat "$filename"
	over_line "$_script $_version (Updated $_updated)" "*"
else
	less "$filename"
	echo "$_script $_version (Updated $_updated)"
fi
exit
