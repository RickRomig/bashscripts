#!/usr/bin/env bash
#############################################################################
# Script Name  : catless
# Description  : view text file with less or cat based on terminal window size.
# Dependencies : none
# Arguments    : $1 -> file to be viewed
# Author       : Copyright ©  2020, Richard B. Romig, LudditeGeek@Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.com
# Crated       : 02 Jan 2020
# Updated      : 25 Jan 2025
# Comments     : Checks to see if passed argument is a valid text or json file.
# TODO (Rick)  :
# License      : GNU General Public License, version 2.0
#############################################################################
#
# Copyright © 2024, Richard B. Romig
# Email: rick.romig@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.
## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

set -eu

## Variables ##

script=$(basename "$0"); readonly script
readonly version="4.9.25025"

## Functions ##

help() {
  local errcode updated
  errcode="${1:-2}"
  updated="25 Jan 2025"
  cat << _HELP_
${orange}$script${normal} v$version (updated $updated)
Displays a text file using either cat or less depending the number of lines in
the file and the number of rows in the current terminal window. Less is used when
the number of lines is greater than the 87% of the rows, otherwise cat is used.

 ${green}Usage:${normal} $script filename [-h] [--help]

_HELP_
  exit "$errcode"
}

view_file() {
  local catmax filelines textfile
  textfile="$1"
    # Get 87% of screen
  catmax=$(( $(tput lines)*87/100 ))
  # Find the number of lines in the file
  filelines=$(wc -l "$textfile" | cut -d' ' -f1)
  # View the file
  box "File: $textfile" "*"
  if (( filelines <= catmax )); then
	  cat "$textfile"
  else
	  less "$textfile"
    head -n5 "$textfile"
  fi
  over_line "$script $version" "-"
}

main() {
  if [[ $# -eq 0 ]]; then
    printf "%s No argument passed.\n" "$RED_ERROR" >&2
    help 1
  elif [[ "$1" = "-h" || "$1" = "--help" ]]; then
    help 0
  elif [[ ! -f "$1" ]]; then
    printf "%s %s not found.\n" "$RED_ERROR" "$1" >&2
    help 2
  elif [[ ! -s "$1" ]]; then
    printf "%s %s is an empty file.\n" "$RED_ERROR" "$1" >&2
    exit 1
  elif file -bL "$1" | grep -qEi "text|json"; then
    view_file "$1"
    exit 0
  else
    printf "%s %s is not a text file.\n" "$RED_ERROR" "$1" >&2
    help 1
  fi
}

## Execution ##

main "$@"
