#!/usr/bin/env bash
##########################################################################
# Script Name  : install-firefox-deb
# Description  : install Firefox .deb package from Mozilla repos
# Dependencies : wget
# Arguments    : none
# Author       : Copyright © 2024 Richard B. Romig, Mosfanet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.net
# Created      : 24 Jan 2024
# Updated      : 20 Mar 2025
# Comments     : For Debian/Ubuntu=based systems with ESR, Flatpak, or Snap versions of Firefox installed.
# TODO (Rick)  : getopts with uninstall Mozilla deb package (pref and list files)
# License      : GNU General Public License, version 2.0
##########################################################################
#
# Copyright © 2024, Richard B. Romig
# Email: rick.romig@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.
## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Source function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

set -eu

## Functions ##

firefox_version() {
	dpkg -l firefox | awk '/ii/ {print $3}' | sed 's/[~+-].*//'
}

is_mint_firefox() {
	dpkg -l firefox | grep -q 'linuxmint' && return "$TRUE" || return "$FALSE"
}

# Remove Mint version of Firefox and English locale
rm_mint_firefox() {
	printf "Firefox version installed: %s\n" "$(firefox_version)"
	sudo apt-get remove -y firefox
	dpkg -l firefox-locale-en >/dev/null 2>&1 && sudo apt remove -y firefox-locale-en
	dpkg -l firefox-l10n-en >/dev/null 2>&1 && sudo apt remove -y firefox-l10n-en
	printf "The Linux Mint version of the Firefox browser has been removed.\n"
}

# Remove Mozilla deb package
rm_mozilla_firefox() {
	local mozilla_list="/etc/apt/sources.list.d/mozilla.list"
	local mozilla_pref="/etc/apt/preferences.d/mozilla.pref"
	local mozilla_asc="/etc/apt/keyrings/packages.mozilla.org.asc"
	printf "Firefox version installed: %s\n" "$(firefox_version)"
	sudo apt-get remove -y firefox
	[[ -f "$mozilla_list" ]] && sudo rm "$mozilla_list"
	[[ -f "$mozilla_pref" ]] && sudo rm "$mozilla_pref"
	[[ -f "$mozilla_asc" ]] && sudo rm "$mozilla_asc"
	printf "The Mozilla Firefox deb package has been removed.\n"
}

# Remove Firefox-ESR (Debian, MX, BunsenLabs)
rm_firefox_esr() {
	printf "Firefox version installed: %s\n" "$(firefox_version)"
	sudo apt-get remove firefox-esr -yy
	printf "Firefox ESR browser has been removed.\n"
}

# Remove Firefox Flatpak Package
rm_firefox_flatpak() {
	printf "Firefox version installed: %s\n" "$(flatpak list | awk '/Firefox/ {print $3}')"
	sudo apt-get remove firefox-esr -yy
	printf "Firefox ESR browser has been removed.\n"
}

# Remove Firefox Snap Package (Ubuntu). Consider disabling Snaps since Ubuntu may reinstall Snap.
rm_firefox_snap() {
	printf "Firefox version installed: %s\n" "$(snap list | awk '/Firefox/ {print $2}')"
	sudo snap remove --purge firefox
	printf "Snap version of Firefox has been removed.\n"
}

list_installed_versions() {
	printf "Installed versions of FireFox:\n"
	exists firefox-esr && printf "Firefox ESR %s installed.\n" "$(firefox_version)"
	is_mint_firefox && printf "Firefox %s (Linux Mint) installed.\n" "$(firefox_version)"
	dpkg -l firefox | grep -q 'build' && printf "Firefox %s (Mozilla deb ) installed.\n" "$(firefox_version)"
	flatpak list | grep -qw firefox && printf "Firefox %s (Flatpak) installed.\n" "$(flatpak list | awk '/Firefox/ {print $3}')"
	snap list | grep -qw firefox && printf "Firefox %s (Snap package) installed.\n" "$(snap list | awk '/Firefox/ {print $2}')"
}

remove_other_versions() {
	if exists firefox-esr; then
		y_or_n "Remove Firefox ESR?" && rm_firefox_esr
	fi
	if is_mint_firefox; then
		y_or_n "Remove Linux Mint Firefox?" && rm_mint_firefox
	fi
	if exists flatpak; then
		y_or_n "Remove Firefox flatpak?" && rm_firefox_flatpak
	fi
	if snap list | grep -qw firefox; then
		y_or_n "Remove Firefox snap?" && rm_firefox_snap
	fi
	if dpkg -l firefox | grep -q 'build'; then
		y_or_n "Remove Mozilla Firefox package?" && rm_mozilla_firefox
	fi
}

make_preference_file() {
	# Preference file to prioritize packages from Mozilla repository
	echo '
Package: *
Pin: origin packages.mozilla.org
Pin-Priority: 1000
' | sudo tee /etc/apt/preferences.d/mozilla.pref
}

mozilla_deb_install() {
	local keyrings_d="/etc/apt/keyrings"
	local asc_file="packages.mozilla.org.asc"
	local key_url="https://packages.mozilla.org/apt/repo-signing-key.gpg"
	local list_url="https://packages.mozilla.org/apt"
	local mozilla_list="/etc/apt/sources.list.d/mozilla.list"

	printf "Installing the Mozilla Firefox DEB package...\n"
	# Import Mozilla APT repository keys
	[[ -d "$keyrings_d" ]] || sudo install -d -m 0755 "$keyrings_d"
	printf "Importing Mozilla APT repository keys...\n"
	wget -q "$key_url" -O- | sudo tee "$keyrings_d/$asc_file" > /dev/null

	# verify_keys

	make_preference_file

	# Add Mozilla APT repository to sources list
	printf "Adding Mozilla APT repository to sources list...\n"
	echo "deb [signed-by=$keyrings_d/$asc_file] $list_url mozilla main" | sudo tee -a "$mozilla_list" > /dev/null

	# Update package list and install Firefox .deb package
	sudo apt-get update && sudo apt-get install -y firefox
	printf "%s installed.\n" "$(firefox_version)"
}

main() {
  local script version
  script=$(basename "$0")
  version="4.0.25079"

	sudo_login 2
	check_package wget

	dpkg -l firefox | grep -q 'build' && leave "Mozilla Firefox DEB package ($(firefox_version)) is already installed."
	clear
	list_installed_versions
	remove_other_versions
	if yes_or_no "Install Mozilla Firefox DEB package?"; then
		mozilla_deb_install
	else
		printf "Operation canceled. No action taken.\n"
	fi
	over_line "$script $version"
	exit
}

## Execution ##

main "$@"
