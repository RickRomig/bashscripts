#!/usr/bin/env bash
##########################################################################
# Script Name  : cinnkeys
# Description  : Backup/Restore Cinnamon keybindings to/from a file.
# Dependencies : functionlib
# Arguments    : none
# Author       : Copyright (C) 2021, Richard B. Romig, MosfaNet
# Email        : rick.romig@gmail.com | rick.romig@mymetronet.com
# Created      : 12 May 2021
# Updated      : 18 Oct 2024
# Comments     : Backup of Cinnamon keybindings in ~/.config
#              : Tested with Cinnamon DE on Mint 19.x & 20.x, 21.x, LMDE 5/6, Debian 10/11/12
# TODO (Rick)  :
# License      : GNU General Public License, version 2
##########################################################################

# Copyright Â© 2023, Richard B. Romig
# Email: rick.romig@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.

## Shellcheck Directives ##
# shellcheck source=/home/rick/bin/functionlib

## Load function library ##

if [[ -x "$HOME/bin/functionlib" ]]; then
  source "$HOME/bin/functionlib"
else
  printf "\e[91mERROR:\e[0m functionlib not found!\n" >&2
  exit 1
fi

## Global Variables ##

verbose_mode="$FALSE"

## Functions ##

help() {
  local errcode updated
  errcode="${1:-1}"
  updated="18 Oct 2024"
  cat << _HELP_
${orange}$script${normal} $version, Upated: $updated
Creates a backup file of Cinnamon keybindings and restores from a backup file.

${green}Usage:${normal} $script [OPTION]

${orange}Available options:${normal}
  -d  Dumps Cinnamon keybindings to a backup file in ~/.config.
  -h  Displays this help text.
  -l  Loads Cinnamon keybindings from the backup file.
  -v  Enable verbose mode
_HELP_
  exit "$errcode"
}

showme() {
	local message="$1"
	[[ "$verbose_mode" == "$TRUE" ]] && echo "$message"
}

main() {
  local cfg_dir kb_bu script version
  script=$(basename "$0")
  version="2.5.24292"
  cfg_dir="$HOME/.config"
  kb_bu="keybindings-backup.dconf"

  if is_cinnamon; then
    noOpt=1
    optstr=":dhlv"
    while getopts "$optstr" opt; do
      case "$opt" in
        d )
          show_message "Dumping keybindings to backup file."
          dconf dump /org/cinnamon/desktop/keybindings/ > "$cfg_dir/$kb_bu"
          printf "Cinnamon Keybindings dumped to %s\n" "$cfg_dir/$kb_bu"
        ;;
        h )
          help 0
        ;;
        l )
          if [[ -f "$cfg_dir/$kb_bu" ]]; then
            show_message "loading keybindings from backup file."
            dconf load /org/cinnamon/desktop/keybindings/ < "$HOME/.config/$kb_bu"
            printf "Cinnamon Keybindings loaded from %s\n" "$cfg_dir/$kb_bu"
          else
            pirntf "%s does not exist. Creating it...\n" "$kb_bu" >&2
            show_message "Dumping keybindings to backup file."
            dconf dump /org/cinnamon/desktop/keybindings/ > "$cfg_dir/$kb_bu"
            printf "Cinnamon Keybindings dumped to %s\n" "$cfg_dir/$kb_bu"
          fi
        ;;
        v )
          verbose_mode="$TRUE"
          show_message "Verbose mode enabled."
        ;;
        ? )
          printf "%s Invalid option -%s\n" "$RED_ERROR" "$OPTARG" >&2
          help 2
      esac
      noOpt=0
    done
    [[ "$noOpt" = 1 ]] && { printf "%s No argument passed.\n" "$RED_ERROR" >&2; help 1; }
    shift "$(( OPTIND - 1 ))"
  else
    pirntf "The desktop environment is not Cinnamon.\n" >&2
    exit 1
  fi
  over_line "$script v$version"
  exit
}

## Execution ##

main "$@"
