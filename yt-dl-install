#!/bin/bash
################################################################################
# Script Name  : yt-dl-install
# Description  : Installs/updates youtube-dl from https://yt-dl.org
# Dependencies : apt, chmod, curl, dpkg
# Arguments    : -i or --info to dispaly information about the script.
# Author       : Richard B. Romig, 23 May 2019
# Email        : rick.romig@gmail.com
# Comment      : Removes package manager installed version from /usr/bin/
################################################################################
# GPL v2
# Copyright (C) 2019, Richard B. Romig
# Email: rick.romig@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.
################################################################################

show_info () {
  cat << _EOF_
yt-dl-install $version

1, yt-dl-install installs the most current version of youtude-dl from the
youtube-dl github site at https://ytdl-org.github.io/youtube-dl/index.html.
Portions of this script are based upon the download instructions on the project's
download page.

2, The script was written for Debian and Ubuntu based distributions but your
experience may vary.

3. The youtube-dl packages contained in the Debian and Ubuntu repositories are
often older and are not regurlarly updated whereas the version on yt-dl.org is
updated quite regurlarly (usually monthly, if not more often).

4. The version installed by the package manager usually places the application
in '/usr/bin/' and it can't updated unless the version in the repository for
your distribution is updated.

5. The script will remove the version installed to 'usr/bin' by the package
manager and install the most current version from yt-dl.org to '/usr/local/bin'.

6. If a version downloaded from yt-dl.org is installed, it will display the
version number and attempt to update it to the latest version.

7. During the installation of youtube-dl from yt-dl.org, will provide the option
of creating a script that will automatically check for updates

8. Please review the README.md, LICENSE, and WARRANTY in the downloaded ZIP
archive for more information. They can also be reviewed in my GitHub repository
at: https://github.com/RickRomig/bashscripts

Richard Romig (GNU/General Public License version 2.0)

_EOF_
}

# Called by trap to remove the temporary directory upon exit from the script

cleanup () {
  [ -d "$tmpdir" ] && rm -rf "$tmpdir"
}

trap cleanup EXIT

version="1.0.3"

# Display information about the script

if [ "$1" == "-i" ] || [ "$1" == "--info" ]; then
  show_info
  exit
fi

# Check sudo access and start sudo timer

sudo ls > /dev/null 2>&1

# Install curl, if not installed.

dpkg -l | grep -qw curl || sudo apt install -yyq curl

# Header

echo -e "\e[1;33myoutube-dl installer and updater, version $version\e[0m"
echo "Copyright (c) 2019, Richard Romig"
echo "Licensed under the GNU/General Public License version 2.0"

# Delete older version from /usr/bin/ that was installed from the repositories

if dpkg -l | grep -qw youtube-dl
then
  echo "Removing the older version installed from the distribution repositories..."
  sudo apt purge -yyq youtube-dl
fi

# Check if youtube-dl is installed from https://yt-dl.org

if which youtube-dl > /dev/null
then
  # If installed, attempt to update
  echo "youtube-dl version: $(youtube-dl --version)"
  echo "Updating youtube-dl to the newest version..."
  sudo youtube-dl -U
else
  # If not installed, install from maintainter's site
  echo "Installing youtube-dl from https://yt-dl.org..."
  if sudo curl -L https://yt-dl.org/downloads/latest/youtube-dl -o /usr/local/bin/youtube-dl
  then
    echo "youtube-dl successfully installed at /usr/local/bin"
    # Set permissions on the downloaded file
    sudo chmod a+rx /usr/local/bin/youtube-dl
    # Ask to create and install an automatic update script
    read -rp "Create an anacron script to automatically update youtube-dl? [yN] " opt
    case $opt in
      [Yy]*)
        if ! tmpdir=$(mktemp -d)
        then
          echo -e"\e[1;31mFailed to create temporary directory!\e[0m"
          exit 1
        fi
        echo "Creating z-ytdlup.sh script to be run weekly by anacron."
        # To run monthly or daily, change location to /etc/cron.monthly or /etc/cron.daily
        {
          printf "#!/bin/bash\n"
          echo "set -e"
          echo 'echo "$(date) $(youtube-dl -U)" >> /var/log/ytdlup.log'
          echo "lines=\$(wc -l /var/log/ytdlup.log | awk '{ print \$1 }')"
          echo "if (( lines > 25 )); then"
          echo "  tail -n 25 /var/log/ytdlup.log > /var/log/ytdlup.tmp"
          echo "  mv /var/log/ytdlup.tmp /var/log/ytdlup.log"
          echo "fi"
          echo "exit"
        } > "$tmpdir/z-ytdlup.sh"
        chmod 755 "$tmpdir/z-ytdlup.sh"
        sudo cp "$tmpdir/z-ytdlup.sh" /etc/cron.weekly/
        echo "z-ytdlup.sh created in /etc/cron.weekly"
        echo "Log file will be stored in /var/log/ytdlup.log"
        ;;
      *)
        echo "Creation of youtube-dl update script declined."
        ;;
    esac
  else
    status="$?"
    echo -e "\e[1;33myoutube-dl download failed. Exit code: $status\e[0m" >&2
  fi
fi

exit

