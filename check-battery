#!/bin/bash
###############################################################################
# Script Name  : check-battery
# Description  : Determine the health of a laptop battery
# Dependencies : upower
# Arguments    : None
# Author       : Richard B. Romig, 30 Jul 2020
# Email        : rick.romig@gmail.com
# Comments     : Inspired by a script by Elias W (eliasw4u on Ezeetalk.com)
# TODO (Rick)  :
###############################################################################

# Copyright (C) 2020, Richard B. Romig
# Email: rick.romig@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE. See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.

## Variables ##

readonly SCRIPT=$(basename "$0")
readonly VERSION="0.1.10"
readonly UPDATED="25 Dec 2020"

## Functions ##

help() {
  echo "$SCRIPT $VERSION, Upated: $UPDATED"
  echo -e "\e[32mUsage:\e[0m $SCRIPT [option]"
  echo -e "\e[33mOPTIONS\e[0m"
  echo -e "$SCRIPT \t\t# displays battery health."
  echo -e "$SCRIPT -h\t# displays this help message."
  echo -e "$SCRIPT --help\t# displays this help message."
  echo -e "$SCRIPT --version\t# displays the version and information about the script."
}

version() {
  cat << _EOF_
$SCRIPT $VERSION, Upated: $UPDATED
Displays the charge state and health of a laptop battery using data obtained
from the upower utilty.
_EOF_
}

function die() {
  local MSG="$1"	    # message
  local EC=${2-1}	    # default exit status 1
  echo -e "\n\e[91mERROR:\e[0m $MSG" >&2
  exit "$EC"
}

cleanup() {
  [ -f "$UPOWER_FILE" ] && rm -f "$UPOWER_FILE"
}

battery_status() {
  echo -e "\n\e[33mBattery charge:\e[0m"
  grep --color=never -E "state|to\ full|to\ empty|percentage" "$UPOWER_FILE"
}

battery_capacity()
{
  echo -e "\n\e[33mBattery health:\e[0m"
  (grep --color=never -E "energy-full:|energy-full-design:|capacity:" "$UPOWER_FILE"
}

warning_level() {
  ENERGY_DES=$(awk '/energy-full-design:/ {print $2}' "$UPOWER_FILE" | sed 's/ wh//')
  ENERGY_DES="${ENERGY_DES%%.*}"
  ENERGY_ACT=$(awk '/energy-full:/ {print $2}' "$UPOWER_FILE" | sed 's/ wh//')
  ENERGY_ACT="${ENERGY_ACT%%.*}"

  if [ "$ENERGY_ACT" -eq 0 ] || [ "$ENERGY_DES" -eq 0 ]; then
    return 0
  else
    CAP=$(awk '/capacity/ {print $2}' "$UPOWER_FILE" | sed 's/%//') # strip off '%'
    CAP=$(echo "$CAP" | awk '{printf "%i", $1}')  # Get integer portion of number
    return "$CAP"
  fi
}

battery_condition() {
  warning_level
  WARN_LEVEL="$?"
  if [ "$WARN_LEVEL" -le "0" ]; then
    echo -e "    \U2620  \e[31mReplace the battery!\e[0m \U2620 "
  elif [ "$WARN_LEVEL" -le "35" ]; then
    echo -e "    \U26D4  \e[31mThe battery should be replaced.\e[0m \U26D4 "
  elif [ "$WARN_LEVEL" -le "65" ]; then
    echo -e "    \U26A0\UFE0F  \e[33mThe battery is getting weak.\e[0m \U26A0\UFE0F "
  else
    echo -e "    \e[32mThe battery is in good condition.\e[0m"
  fi
}

ac_status() {
  STATUS=$(/usr/bin/upower -i $(/usr/bin/upower -e | grep 'AC') | awk '/online:/ {print $2}')
  echo -e "\n\e[33mAC Power:\e[0m"
  echo -n "    Laptop is "
  [ "$STATUS" = "no" ] && echo -n "not "
  echo "plugged in."
}

## Execution ##

clear
if [[ $# > 0 ]]; then
  case "$1" in
    -h|--help ) help; exit;;
    --version ) version; exit;;
    * ) die "Invalid argument." 1
  esac
fi

echo -e "\e[1;33mBattery Status\e[0m"
if [ -d /proc/acpi/button/lid/ ]; then
  dpkg -l | grep -qw upower || die "Missing dependency - upower is not installed."
  # dpkg -l | grep -qw upower || sudo apt install upower -yy"
  BAT_NAME=$(/usr/bin/upower -e | grep 'BAT' | cut -d "_" -f2)
  if [ -z "$BAT_NAME" ]; then
    echo -e "\n\e[91mNo battery detected.\e[0m"
  else
    UPOWER_FILE=$(mktemp) || die "Failed to create temporary file." 1
    trap cleanup EXIT
    /usr/bin/upower -i "$(/usr/bin/upower -e | grep BAT)" > "$UPOWER_FILE"
    echo -e "\n\e[33mBattery:\e[0m $BAT_NAME"
    battery_status
    battery_capacity
    battery_condition
    ac_status
  fi
else
  echo $'\n'$"This system is not a laptop. No battery detected."
fi

echo -e "\n$SCRIPT v$VERSION (Updated: $UPDATED)"

exit
