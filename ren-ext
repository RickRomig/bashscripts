#!/bin/bash
#####################################################################
# Script Name  : ren-ext
# Description  : Renames file extensions in the current directory
# Dependencies : rename
# Arguments    : File extenstion to be changed
# Author       : Richard Romig
# Email        : rick.romig@gmail.com
# Comment      :
#####################################################################
# Copyright (C) 2018  Richard Romig
# Email: rick.romig@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.
#####################################################################

function usage {
	echo "Usage: $myscript extension"
	echo "Example: $myscript JPG"
	echo "Supported extensions: BAK, FLV, GIF, htm, HTM, HTML, jpeg, JPG, \
	MP3, MP4, MPG, mpeg, PDF, PNG, TXT, WMV"
	exit 1
}

myscript=$(basename $0)

echo "$myscript - bulk renames file extensions in the current diectory."
echo -e  "Copyright 2018, Richard Romig\n"

# Check for arguments
if  [ -z "$1"  ]; then
	echo "Error: Must provide a file extension to be renamed."
	usage
else
	ext=$1
fi

shopt -s nocasematch
# Rename file extenssions based on the passed argument
case $ext in
	avi)
        	echo "Renaming .$ext files to .avi"
		rename -v 's/\.AVI$/\.avi/i' *
		;;
	bak)
        	echo "Renaming .$ext files to .bak"
		rename -v 's/\.BAK$/\.bak/i' *
		;;
	flv)
		echo "Renaming .$ext files to .flv"
		rename -v 's/\.FLV$/\.flv/i' *
		;;
	gif)
		echo "Renaming .$ext files to .gif"
		rename -v 's/\.GIF$/\.gif/i' *
		;;
	htm)
		echo "Renaming .$ext files to .html"
		rename -v 's/\.htm$/\.html/i' *
		;;
	html)
		echo "Renaming .$ext files to .html"
		rename -v 's/\.HTML$/\.html/i' *
		;;
	jpeg)
		echo "Renaming .$ext files to .jpg"
		rename -v 's/\.jpeg$/\.jpg/i' *
		;;
	jpg)
		echo "Renaming .$ext files to .jpg"
		rename -v 's/\.JPG$/\.jpg/i' *
		;;
	mp3)
		echo "Renaming .$ext files to .mp3"
		rename -v 's/\.MP3$/\.mp3/i' *
		;;
	mp4)
		echo "Renaming .$ext files to .mp4"
		rename -v 's/\.MP4$/\.mp4/i' *
		;;
	mpg)
		echo "Renaming .$ext files to .mpg"
		rename -v 's/\.MPG$/\.mpg/i' *
		;;
	mpeg)
		echo "Renaming .$ext files to .mpg"
		rename -v 's/\.MPEG$/\.mpg/i' *
		;;
	pdf)
		echo "Renaming .$ext files to .pdf"
		rename -v 's/\.PDF$/\.pdf/i' *
		;;
	png)
		echo "Renaming .$ext files to .png"
		rename -v 's/\.PNG$/\.png/i' *
		;;
	txt)
		echo "Renaming .$ext files to .txt"
		rename -v 's/\.TXT$/\.txt/i' *
		;;
	wmv)
		echo "Renaming .$ext files to .wmv"
		rename -v 's/\.WMV$/\.wmv/i' *
		;;
	*)
		echo "Error: .$ext is NOT a supported file extension."
		usage
		;;
esac

shopt -u nocasematch

exit 0
