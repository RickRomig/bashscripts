#!/bin/bash
#####################################################################
#Script Name  :upper2lower#
#Description  :Renames uppercase filenames to lowercase
#Dependencies :rename
#Args         :filename to be renamed
#Author       :Richard Romig
#Email        :rick.romig@gmail.com
#Comment      :If no filename is passed, renames all files in folder
#             :to all lowercase
#####################################################################
# Copyright (C) 2018  Richard Romig
# Email: rick.romig@gmail.com
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program. If not, see <https://www.gnu.org/licenses/>.
#####################################################################
myscript=$(basename $0)
myfile=$1

function usage {
	echo "Usage: $myscript [filename]"
	echo "WARNING! If no filename is passed, $myscript will change all \
filenames in the current directory to lowercase."
        exit 1
}

echo "Upper2Lower - Changes uppercase in files names to lower case."
echo "Copyright 2018, Richard Romig"

# if no filename passed then get confirmation from user
if  [ -z "$1"  ]; then
        echo "WARNING: $myscript without an argument changes all uppercase \
characters in all filenames in the directory to lowercase."
        read -p "Are you sure you want to do this? [y/N] " yn
        case $yn in
                [Yy]* )
			rename -v 'y/A-Z/a-z/' *
                        ;;
                * )
			usage
	                ;;
        esac
elif [ -e "$myfile" ]; then
        rename -v 'y/A-Z/a-z/' $myfile
else
        echo "Error: $myfile does not exist. Try again."
        usage
fi
exit 0
